import '../design_system.dart';
import '../widgets/field_of_writing_card_widget.dart';

class FieldOfWritingComponent extends StatelessWidget {
  final dynamic Function(bool)? onFocusChanged;
  final dynamic Function(String)? onTextChanged;
  final void Function()? onPressedConclude;
  final void Function()? onPressedAddText;
  final QuillEditorController controller;
  final bool visibility;
  final void Function()? onPressedIconDelet;
  final Color? colorState;
  final Color? colorSelected;
  final String? titleState;
  final String? titleSelected;
  final bool doneButtonPressed;
  final String titleNewCard;
  final Function(String)? onEditingCompleted;

  const FieldOfWritingComponent({
    Key? key,
    this.onFocusChanged,
    this.onTextChanged,
    this.onPressedConclude,
    this.onPressedAddText,
    required this.controller,
    required this.visibility,
    this.onPressedIconDelet,
    this.colorState,
    this.colorSelected,
    this.titleState,
    this.titleSelected,
    required this.doneButtonPressed,
    required this.titleNewCard,
    this.onEditingCompleted,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    Size size = MediaQuery.of(context).size;
    SizedBox sizeDezesseis = SizedBox(height: size.height * 0.019);
    // int index = customToolBarList.toList().length;

    final Widget iconConclude =

        /// se o estado for editar, o campo de texto nao poderá ser acessado antes de clicar nele
        // o texto precisa se manter lá após digitar e clicar no outro campo de texto
        IconButtonWidget(
      height: size.height * 0.057,
      width: 124,
      title: doneButtonPressed == false ? titleState! : titleSelected!,
      maxLines: 1,
      style: TextStyles.textMedium.copyWith(
        color: doneButtonPressed == false ? colorState! : colorSelected!,
        fontSize: 16,
      ),
      spaceIcon: size.width * 0.007,
      isIcon: Icon(
        IconsApp.vector,
        color: doneButtonPressed == false ? colorState! : colorSelected!,
        size: 10,
      ),
      outlineColor: doneButtonPressed == false ? colorState! : colorSelected!,
      colorBackground: ColorsAppLight.white,
      onPressed: onPressedConclude,
    );
    return Container(
      width: size.width * 0.44,
      decoration: BoxDecoration(
        color: ColorsAppLight.white,
        borderRadius: const BorderRadius.all(Radius.circular(8)),
        boxShadow: [
          shadowTres,
        ],
      ),
      child: Padding(
        padding: EdgeInsets.only(
          top: size.height * 0.019,
          bottom: size.height * 0.019,
          right: size.width * 0.012,
          left: size.width * 0.012,
        ),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            FieldOfWritingCardWidget(
              widthCard: size.width * 0.43,
              heightCard: size.height * 0.35,
              heightTextField: size.height * 0.23,
              controller: controller,
              onFocusChanged: onFocusChanged,
              onTextChanged: onTextChanged,
              onEditingCompleted: onEditingCompleted,
              titleCard: 'Enunciado da Questão',
              iconConclude: iconConclude,
              iconDelet: false,
              sizedBox: const SizedBox.shrink(),
            ),
            sizeDezesseis,
            if (visibility == true)
              Visibility(
                visible: visibility,
                child: FieldOfWritingCardWidget(
                  widthCard: size.width * 0.43,
                  heightCard: size.height * 0.35,
                  heightTextField: size.height * 0.23,
                  controller: controller,
                  titleCard: titleNewCard,
                  onFocusChanged: onFocusChanged,
                  onTextChanged: onTextChanged,
                  onEditingCompleted: onEditingCompleted,
                  iconConclude: iconConclude,
                  sizedBox: const SizedBox(width: 16),
                  iconDelet: true,
                  onPressedIconDelet: onPressedIconDelet,
                ),
              ),
            if (visibility == false)
              IconButtonWidget(
                width: size.width * 0.43,
                height: size.height * 0.057,
                title: 'Adicionar texto relacionado',
                maxLines: 1,
                style: TextStyles.textMedium.copyWith(
                  color: ColorsAppLight.neutral50,
                  fontSize: 16,
                ),
                colorBackground: ColorsAppLight.white,
                isIcon: const Icon(
                  IconsApp.plus,
                  color: ColorsAppLight.neutral50,
                  size: 9,
                ),
                boxShadow: [
                  shadowTres,
                ],
                outlineColor: Colors.transparent,
                onPressed: onPressedAddText,
              ),
          ],
        ),
      ),
    );
  }
}
