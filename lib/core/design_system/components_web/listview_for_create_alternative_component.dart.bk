import 'package:quill_html_editor/quill_html_editor.dart';

import '../design_system.dart';

class ListViewForCreateAlternativeComponent extends StatelessWidget {
  final QuillEditorController controller;
  final void Function()? onPressedAlternative;
  final Function(String)? onEditingCompleted;
  final Function(bool)? onFocusChanged;
  final Function(String)? onTextChanged;
  final Widget iconDelet;
  final bool doneButtonPressedAlternative;
  final bool selectedAlternative;
  final String titleStateAlternative;
  final String titleSelectedAlternative;
  final Color colorStateAlternativeButtonConclude;
  final Color colorSelectedAlternativeEditing;
  const ListViewForCreateAlternativeComponent({
    Key? key,
    required this.controller,
    this.onPressedAlternative,
    this.onEditingCompleted,
    this.onFocusChanged,
    this.onTextChanged,
    required this.iconDelet,
    required this.doneButtonPressedAlternative,
    required this.selectedAlternative,
    this.titleStateAlternative = 'Concluir',
    this.titleSelectedAlternative = 'Editar',
    this.colorStateAlternativeButtonConclude = ColorsAppLight.save,
    this.colorSelectedAlternativeEditing = ColorsAppLight.neutral50,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    String? gender;
    Size size = MediaQuery.of(context).size;

    return Container(
      width: size.width * 0.44,
      decoration: BoxDecoration(
        color: ColorsAppLight.white,
        borderRadius: const BorderRadius.all(Radius.circular(8)),
        boxShadow: [
          shadowTres,
        ],
      ),
      child: Padding(
        padding: EdgeInsets.only(
          top: size.height * 0.019,
          bottom: size.height * 0.019,
          right: size.width * 0.012,
          left: size.width * 0.012,
        ),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            TextWidget(
              text: 'Alternativas',
              style: TextStyles.textMedium.copyWith(
                color: ColorsAppLight.neutral50,
                fontSize: 16,
              ),
            ),
            const SizedBox(height: 16),
            ListView.builder(
              shrinkWrap: true,
              itemCount:
                  gender == 'multiple' ? multiples.length : trueOrFalse.length,
              itemBuilder: (context, index) {
                return Padding(
                  padding: const EdgeInsets.only(top: 16),
                  child: AlternativeCreateWidget(
                    titleNumberAlternative: index.toString(),
                    controller: controller,
                    visibility: true,
                    selectedAlternative: selectedAlternative,
                    onPressedAlternative: onPressedAlternative,
                    onEditingCompleted: onEditingCompleted,
                    onFocusChanged: onFocusChanged,
                    onTextChanged: onTextChanged,
                  ),
                );
              },
            ),
            const SizedBox(height: 16),
            Row(
              mainAxisAlignment: MainAxisAlignment.end,
              children: [
                iconDelet,
                const SizedBox(width: 16),

                /// TODO: se o estado for editar, o campo de texto nao poderá ser acessado antes de clicar nele
                // o texto precisa se manter lá após digitar e clicar no outro campo de texto
                IconButtonWidget(
                  height: size.height * 0.057,
                  width: 124,
                  title: doneButtonPressedAlternative == false
                      ? titleStateAlternative
                      : titleSelectedAlternative,
                  maxLines: 1,
                  style: TextStyles.textMedium.copyWith(
                    color: doneButtonPressedAlternative == false
                        ? colorStateAlternativeButtonConclude
                        : colorSelectedAlternativeEditing,
                    fontSize: 16,
                  ),
                  spaceIcon: size.width * 0.007,
                  isIcon: Icon(
                    IconsApp.vector,
                    color: doneButtonPressedAlternative == false
                        ? colorStateAlternativeButtonConclude
                        : colorSelectedAlternativeEditing,
                    size: 10,
                  ),
                  outlineColor: doneButtonPressedAlternative == false
                      ? colorStateAlternativeButtonConclude
                      : colorSelectedAlternativeEditing,
                  colorBackground: ColorsAppLight.white,
                  onPressed: () {},
                ),
              ],
            ),
            const SizedBox(height: 16),
            IconButtonWidget(
              width: size.width * 0.43,
              height: size.height * 0.057,
              title: 'Adicionar alternativas',
              maxLines: 1,
              style: TextStyles.textMedium.copyWith(
                color: ColorsAppLight.neutral50,
                fontSize: 16,
              ),
              colorBackground: ColorsAppLight.white,
              isIcon: const Icon(
                IconsApp.plus,
                color: ColorsAppLight.neutral50,
                size: 9,
              ),
              boxShadow: [
                shadowTres,
              ],
              outlineColor: Colors.transparent,
              onPressed: () {},
            ),
          ],
        ),
      ),
    );
  }
}
